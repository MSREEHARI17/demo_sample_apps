# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'pom'

- task: Docker@2
  inputs:
    containerRegistry: 'azurecontainerregistry'
    repository: 'czcontainerregistry.azurecr.io/samplespringapp'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
- task: Docker@2
  inputs:
    containerRegistry: 'Docker_Azure'
    repository: 'cloudzenix/azuredevops'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Free Trial(82cd788d-d67c-42bc-a880-e280b6f7328e)'
    appType: 'webAppLinux'
    WebAppName: 'czwebapp'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.jar'
    RuntimeStack: 'JAVA|8-jre8'
    StartupCommand: 'java -jar /home/site/wwwroot/spring-boot-mongo-1.0.jar'
- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'cz_eks_demo'
    namespace: 'springappns'
    manifests: 'deployment.yml'